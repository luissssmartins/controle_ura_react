{"version":3,"sources":["components/ConfForm.js","URA_150px.png","components/URAHeader.js","components/BasicControl.js","components/MessageMQTT.js","components/RobotStatus.js","URAMQTTControl.js","App.js","index.js"],"names":["ConfForm","props","state","topicToSend","inputTopic","topicToReceive","outputTopic","handleSubmit","bind","handleChangeTopicToSend","handleChangeTopicToReceive","event","this","setState","target","value","console","log","onTopicChange","preventDefault","className","onSubmit","type","onChange","id","Component","URAHeader","src","logo","alt","width","title","BasicControl","client","useMqttState","uraTopic","topic","handleClick","message","publish","onClick","MessageMQTT","formatedTime","leftLineSensor","rightLineSensor","distance","msg","messageTerms","split","seconds","parseInt","date","Date","setSeconds","toISOString","substr","RobotStatus","useSubscription","connectionStatus","URAMQTTControl","brokerUrl","options","keepalive","App","mqttURAInput","mqttURAOutput","bodyChoice","handleTopicChange","topicIn","topicOut","bodyApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e2b68b4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport './ConfForm.css'\r\n\r\nexport default class ConfForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { topicToSend: props.inputTopic, topicToReceive: props.outputTopic }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChangeTopicToSend = this.handleChangeTopicToSend.bind(this);\r\n        this.handleChangeTopicToReceive = this.handleChangeTopicToReceive.bind(this);\r\n    }\r\n\r\n    handleChangeTopicToSend(event) {\r\n        this.setState({ topicToSend: event.target.value });\r\n    }\r\n\r\n    handleChangeTopicToReceive(event) {\r\n        this.setState({ topicToReceive: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        // Obtem o valor do tópico e atualiza a tela \r\n        console.log(\"topicToReceive: \" + this.state.topicToReceive);\r\n        this.props.onTopicChange(this.state.topicToSend, this.state.topicToReceive);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"Form\" onSubmit={this.handleSubmit} >\r\n                <div className=\"TextIn\">\r\n                    <strong>Tópico para enviar: </strong>\r\n                    <input type=\"text\" value={this.state.topicToSend} onChange={this.handleChangeTopicToSend} id=\"topic_to_send\" />\r\n                </div>\r\n                <div className=\"TextIn\">\r\n                    <strong>Tópico para receber: </strong>\r\n                    <input type=\"text\" value={this.state.topicToReceive} onChange={this.handleChangeTopicToReceive} id=\"topic_to_receive\" />\r\n                </div>\r\n                <div className=\"BtnSubmit\" >\r\n                    <input type=\"submit\" value=\"Ok\" />\r\n                </div>\r\n\r\n            </form>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/URA_150px.365cf153.png\";","import React from 'react'\r\n\r\nimport logo from '../URA_150px.png';\r\n\r\nexport default function URAHeader(props) {\r\n    return (\r\n        <header>\r\n            <img src={logo} alt=\"Logo do URA\" width=\"120px\" />\r\n            <h1> {props.title} </h1>\r\n            \r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport { useMqttState } from 'mqtt-react-hooks';\r\n\r\nimport './BasicControl.css'\r\n\r\nexport default function BasicControl(props) {\r\n\r\n\r\n    const { client } = useMqttState();\r\n    //console.log(\"Robot Control: \"+props.topic) \r\n    const uraTopic = props.topic;\r\n\r\n    function handleClick(message) {\r\n        console.log(\"Click: \" + message + \" on \" + uraTopic);\r\n        return client.publish(uraTopic, message);\r\n    }\r\n\r\n    return (\r\n        <div className=\"controls\">\r\n            <button type=\"button\" onClick={() => handleClick('f')}>\r\n                Frente\r\n            </button>\r\n            <div>\r\n                <button type=\"button\" onClick={() => handleClick('e')}>\r\n                    Esquerda\r\n                </button>\r\n                <button type=\"button\" onClick={() => handleClick('d')}>\r\n                    Direita\r\n                </button>\r\n            </div>\r\n            <button type=\"button\" onClick={() => handleClick('t')}>\r\n                Trás\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function MessageMQTT(props) {\r\n    let formatedTime = -1;\r\n    let leftLineSensor = -1;\r\n    let rightLineSensor = -1;\r\n    let distance = -1; \r\n    if ( props.msg ){ \r\n        let messageTerms = props.msg.split(' ');\r\n        let seconds = parseInt(messageTerms[1]);\r\n        \r\n        let date = new Date(null);\r\n        date.setSeconds(seconds); \r\n        formatedTime = date.toISOString().substr(11, 8);\r\n         \r\n        distance = messageTerms[2]; \r\n        leftLineSensor = messageTerms[3]; \r\n        rightLineSensor = messageTerms[4]; \r\n    }\r\n    return (\r\n        <div>\r\n            <p> <strong>Sensor de Distância(cm): </strong> {distance}  </p>\r\n            <p> <strong>Sensor de Linha Esquerdo: </strong> {leftLineSensor}  </p>\r\n            <p> <strong>Sensor de Linha Direito: </strong> {rightLineSensor}  </p>\r\n            <p> <strong>Tempo de Atividade(min): </strong> {formatedTime}  </p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './RobotStatus.css'\r\n\r\nimport { useSubscription, useMqttState } from 'mqtt-react-hooks';\r\nimport MessageMQTT from './MessageMQTT';\r\n\r\nexport default function RobotStatus(props) {\r\n  const { message } = useSubscription([props.topic]);\r\n  const { connectionStatus } = useMqttState();\r\n\r\n  return (\r\n    <div className=\"Card\">\r\n      <div className=\"Title\">\r\n        <h3> Robot Status </h3>\r\n      </div>\r\n      <div className=\"Content\" >\r\n        <p> <strong>Topic: </strong> {message && message.topic} </p>\r\n        <MessageMQTT msg={message && message.message} />\r\n        <p> <strong>Conection: </strong> {connectionStatus} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { Connector } from 'mqtt-react-hooks';\r\nimport BasicControl from './components/BasicControl';\r\nimport RobotStatus from './components/RobotStatus';\r\n\r\n\r\nexport default function URAMQTTControl(props) {\r\n  console.log(\"props \" + props.outputTopic)\r\n  return (\r\n    <div>\r\n      <Connector brokerUrl=\"ws://157.230.89.7:1884\" options={{ keepalive: 0 }} >\r\n        <BasicControl topic={props.inputTopic} />\r\n        <RobotStatus topic={props.outputTopic} />\r\n      </Connector>\r\n    </div>\r\n  );\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport ConfForm from './components/ConfForm';\r\n\r\nimport URAHeader from './components/URAHeader'\r\nimport URAMQTTControl from './URAMQTTControl';\r\n\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { mqttURAInput: 'URA01/input', mqttURAOutput: 'URA01/output', bodyChoice: 1 };\r\n\r\n    this.handleTopicChange = this.handleTopicChange.bind(this);\r\n  }\r\n\r\n  handleTopicChange(topicIn, topicOut) {\r\n    this.setState({ mqttURAInput: topicIn, mqttURAOutput: topicOut });\r\n    this.setState({ bodyChoice: 2 });\r\n    console.log(\"Tópicos handleTopicChange:\\n\" + topicIn + \"\\n\" + topicOut);\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    //console.log(\"Tópico Atual: \" + this.state.mqttURAInput);\r\n    let bodyApp;\r\n    if (this.state.bodyChoice === 1) {\r\n      bodyApp = <ConfForm onTopicChange={this.handleTopicChange} inputTopic={this.state.mqttURAInput} outputTopic={this.state.mqttURAOutput} />\r\n    }\r\n    else if (this.state.bodyChoice === 2) {\r\n      bodyApp = <URAMQTTControl inputTopic={this.state.mqttURAInput} outputTopic={this.state.mqttURAOutput} />\r\n    }\r\n\r\n    return (\r\n\r\n      <div>\r\n        <URAHeader title=\"Controle URA MQTT\" />\r\n        {bodyApp}\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}